#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'vstdlib_client'

def options(opt):
	# stub
	return

def configure(conf):
	conf.define('VSTDLIB_DLL_EXPORT',1)

def build(bld):
	source = [
		'coroutine.cpp',
		'cvar.cpp',
		'jobthread.cpp',
		'keyvaluessystem.cpp',
		'random.cpp',
		'vcover.cpp',
		'eventsystem.cpp',
		'vstrtools.cpp',
		'vstdlib_strtools.cpp',
		'../public/tier0/memoverride.cpp'
	]

	includes = [
		'.',
		'../public',
		'../public/tier0',
		'../public/tier1',
		'../public/vstdlib'
	]

	defines = []

	libs = ['tier0_client','tier1_client','interfaces_client']

	if bld.env.DEST_OS == 'android':
		libs += ['ANDROID_SUPPORT']

	install_path = bld.env.LIBDIR

	bld.shlib(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

